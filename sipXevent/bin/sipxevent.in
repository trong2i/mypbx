#!/bin/bash

# sipXevent - Startup script for sipxevent
# chkconfig: 35 96 15
# description: sipxevent is a web sockets service for system events
# processname: sipxevent

# Copyright (C) 2012 eZuce Inc., certain elements licensed under a Contributor Agreement.
# Contributors retain copyright to elements licensed under a Contributor Agreement.
# Licensed to the User under the AGPL license.

. /etc/rc.d/init.d/functions || exit 1
. @SIPX_LIBEXECDIR@/sipx-utils.sh || exit 1

prog=sipxevent
pidfile="@SIPX_RUNDIR@/sipxevent.pid"

[ -e @SIPX_CONFDIR@/sysconfig/$prog ] && . @SIPX_CONFDIR@/sysconfig/$prog

checkRunningInstance() {
  if [ -f "${pidfile}" ]; then
    pid=`cat ${pidfile}`
    if checkpid $pid 2>&1; then
      echo "Process $prog is already running with pid $pid"
      exit 1
    fi
  fi
}

# Start sipxevent
start() {
  checkRunningInstance
  
  JavaCmd=`@SIPX_BINDIR@/sipx-config --java`
  Dependencies=`@SIPX_BINDIR@/java-dep -d @SIPX_JAVADIR@/sipXcommons @event_PKGS@`
  export CLASSPATH=`echo @SIPX_CONFDIR@/sipxevent @SIPX_JAVADIR@/sipXevent/*.jar ${Dependencies} | sed -e 's/ /:/g'`  
  
  Command="$JavaCmd \
    -Dprocname=sipxevent \
    -Dconf.dir=@SIPX_CONFDIR@ \
    -Dvar.dir=@SIPX_VARDIR@ \
    $JavaSslOpts \
    org.sipfoundry.sipxevent.WebSocketServer \
    $Args"
  if [ -n "${NoFork}" ] ; then
    runuser -s /bin/bash @SIPXPBXUSER@ -c "${Command}"
  else
    echo -n $"Starting $prog: "
    runuser -s /bin/bash @SIPXPBXUSER@ -c "${Command}" >/dev/null 2>&1 &
    echo $! > ${pidfile}
    echo_success
  fi
}

stop() {
  echo -n $"Stopping sipxevent: "
  killproc -p "${pidfile}" "sipxevent"
  Status=$?
  echo
  [ $Status -eq 0 ] && rm -f "${pidfile}"
}

restart() {
    stop
    # sleep for no good reason. Can be disconcerting if stop/start
    # switch is too fast IMHO
    sleep 1
    start
}

case "$1" in
  nofork)
    NoFork=1
    start
    ;;
  start)
    start
    ;;
  stop)
    stop
    ;;
  restart|reload|force-reload)
    restart
    ;;
  condrestart)
    [ -f ${pidfile} ] && restart || :
    ;;
  status)
    status -p ${pidfile} sipxevent
    ;;
  configtest)
    configtest
    ;;
  *)
    echo "Usage: $0 {start|stop|status|restart|reload|force-reload|condrestart|nofork}"
    Status=1
esac

exit $Status