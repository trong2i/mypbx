#!/bin/bash
# sipxrelay - Startup script for sipxrelay

# chkconfig: 35 80 15
# description: sipxrelay is a media relay for telecommunications
# processname: sipxrelay

# Copyright (c) 2012 eZuce, Inc. All rights reserved.
# Contributed to SIPfoundry under a Contributor Agreement

# This software is free software; you can redistribute it and/or modify it under
# the terms of the Affero General Public License (AGPL) as published by the
# Free Software Foundation; either version 3 of the License, or (at your option)
# any later version.

# This software is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
# details.

. /etc/rc.d/init.d/functions || exit $ENOENT
. @SIPX_LIBEXECDIR@/sipx-utils.sh || { echo_failure; echo; exit $ENOENT; }

prog=sipxrelay
pidfile="@SIPX_RUNDIR@/sipxrelay.pid"
regex="Dprocname=sipxrelay"

[ -e @SIPX_CONFDIR@/${prog}rc ] && . @SIPX_CONFDIR@/sysconfig/${prog}rc

start() {
  JavaCmd=`@SIPX_BINDIR@/sipx-config --java`
  Dependencies=`@SIPX_BINDIR@/java-dep -d @SIPX_JAVADIR@/sipXcommons @relay_PKGS@`
  export CLASSPATH=`echo @SIPX_JAVADIR@/sipXbridge/*.jar ${Dependencies} | sed -e 's/ /:/g'`
  setJavaSslOpts
  # procname is there so cfengine can find it
  Command="$JavaCmd \
    -Dprocname=sipxrelay \
    -Dconf.dir=@SIPX_CONFDIR@ \
    -Dsipxrelay.command=start \
     $JavaSslOpts \
    -Dorg.apache.commons.logging.Log=org.apache.commons.logging.impl.Log4JLogger \
    org.sipfoundry.sipxrelay.SymmitronServer \
    $Args"
  if [ -n "${NoFork}" ] ; then
    killAnyOrphans @SIPXPBXUSER@ $regex
    runuser -s /bin/bash @SIPXPBXUSER@ -c "${Command}"
  else
    checkRunningInstance @SIPXPBXUSER@ $regex > /dev/null
    Status=$?
    [ $Status -eq 0 ] && { echo -n "$prog $runningError"; echo_failure; echo; exit $ERUNNING; }

    echo -n $"Starting $prog: "
    runuser -s /bin/bash @SIPXPBXUSER@ -c "${Command}" >/dev/null 2>&1 &
    echo $! > ${pidfile}

    if [ $# -gt 0 ]; then
      #check if process was spawned
      checkRunningInstanceTimeout @SIPXPBXUSER@ $regex
      Status=$?
      [ $Status -eq 0 ] || { echo_failure; echo; exit $ESRCH; }
      pid=`ps -u @SIPXPBXUSER@ -o pid,args | grep $regex | grep -v "grep" | awk '{print $1 }'`
      Status=$?
      [ $Status -eq 0 ] || { echo_failure; echo; exit $ENOSCKT; }
      [ $Status -eq 0 ] && { echo_success; echo; }
    else
      echo_success; echo;
    fi
  fi
}

stop() {
  echo -n $"Stopping sipxbridge: "
  killAnyOrphans @SIPXPBXUSER@ $regex
  checkRunningInstance @SIPXPBXUSER@ $regex > /dev/null
  Status=$?
  [ $Status -eq 0 ] && { echo_failure; echo; exit $ERUNNING; }
  [ $Status -eq 0 ] || { echo_success; echo; }
}

restart() {
  stop
  start $withCheck
}

asyncrestart() {
  stop
  start
}


configtest() {
  Status=0
  logfile="@SIPX_LOGDIR@/sipxrelay.log"
  if [ -e $logfile -a ! -w $logfile ]
  then
     echo "Log file '$logfile' exists but is not writable by user '@SIPXPBXUSER@'." >&2
     Status=$ENOTWRITABLE
  fi
  JavaCmd=`@SIPX_BINDIR@/sipx-config --java`
  Dependencies=`@SIPX_BINDIR@/java-dep -d @SIPX_JAVADIR@/sipXcommons @relay_PKGS@`
  export CLASSPATH=`echo @SIPX_JAVADIR@/sipXbridge/*.jar ${Dependencies} | sed -e 's/ /:/g'`
  setJavaSslOpts
  # procname is there so cfengine can find it
  Command="$JavaCmd \
    -Dconf.dir=@SIPX_CONFDIR@ \
    -Dsipxrelay.command=configtest \
    $JavaSslOpts \
    -Dorg.apache.commons.logging.Log=org.apache.commons.logging.impl.Log4JLogger \
    org.sipfoundry.sipxrelay.SymmitronServer \
    $Args"
  exec $Command
}

case "$1" in
  nofork)
    NoFork=1
    start
    ;;
  start)
    start $withCheck
    ;;
  stop)
    stop
    ;;
  restart|reload|force-reload)
    restart
    ;;
  asyncrestart)
    asyncrestart
    ;;
  condrestart)
    checkRunningInstance @SIPXPBXUSER@ $regex > /dev/null
    Status=$?
    [ $Status -eq 0 ] && restart || :
    ;;
  status)
    checkRunningInstance @SIPXPBXUSER@ $regex $prog
    Status=$?
    ;;
  configtest)
    configtest
    ;;
  *)
    echo "Usage: $0 {start|stop|status|restart|asyncrestart|reload|force-reload|condrestart|nofork}"
    Status=$EINCORRECTUSAGE
esac

exit $Status
