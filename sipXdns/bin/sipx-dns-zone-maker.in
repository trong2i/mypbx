#!/usr/bin/ruby

# Copyright (c) 2012 eZuce, Inc. All rights reserved.
# Contributed to SIPfoundry under a Contributor Agreement
#
# This software is free software; you can redistribute it and/or modify it under
# the terms of the Affero General Public License (AGPL) as published by the
# Free Software Foundation; either version 3 of the License, or (at your option)
# any later version.
#
# This software is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
# details.


#
# Generated a zone file from data file with know server name and addresses
#

require 'erb'
require 'yaml'

$default_zone_template = '@SIPX_CONFDIR@/sipxdns/zone.erb'

# you can put defaults to optional data here so if yaml doesn't define them you get reasonable defaults
def make_zone(data, template, model = {})

  var = binding

  data.each_key { |x|
    eval "#{x} = data['#{x}']", var
  }

  model.each_key { |x|
    eval "#{x} = model['#{x}']", var
  }

  erb = ERB.new(File.read(template))
  erb.filename = template
  erb.result(var)
end

if __FILE__ == $0

require 'optparse'

zone_template = $default_zone_template

args = OptionParser.new { |opts|
  opts.banner = "Usage : sipx-dns-zone-maker [options]"

  opts.separator ""
  opts.separator "Options:"

  opts.on("--help", "Print this help message.") {
    puts opts
    exit
  }

  opts.on("--template FILE", "ERB formated template. Default is #{$template}") {|f|
    $template = f
7  }

  $yaml = '@SIPX_CFDATA@/zone.yaml'
  opts.on("--in FILE", "YAML formated file for servers. Default is #{$yaml}") {|f|
    $yaml = f
  }

  $out = STDOUT
  opts.on("--out FILE", "Write to file, otherwise output is sent to stdout") {|f|
    $out = File.open(f, 'w')
  }
}
args.parse!

data = YAML::load_file($yaml)
$out.puts make_zone(data, zone_template)
end
